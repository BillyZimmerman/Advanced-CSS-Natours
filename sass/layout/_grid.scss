.row {
  max-width: $grid-width;
  background-color: rgb(238, 238, 238);
  // good practice to center block elements inside another block element in this example auto will set left and right spacing to be the same
  margin: 0 auto;
  margin-bottom: $gutter-vertical;
  // EXAMPLE OF USING THE NOT SUDO SELECTOR TO REMOVE MARGIN ON LAST ROW - everything except the last child will have a bottom margin
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  // USING THE ATTRIBUTE SELECTOR - selecting all the class attributes with col-
  [class^="col-"] {
    background-color: orangered;
    float: left;
    // To still have a visible gutter you need the right margins on all but the far right col
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  // columns are nested within each row, thats why its written out like this within the row
  // using "calc" to make calculations to mix units more easily
  // 100% is the entire width - the gutter spacing / 2
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
